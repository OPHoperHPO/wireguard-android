name: Android CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Allows pushing tags to the repository

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: true  # Clones submodules as well

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build WireGuard Android
      run: ./gradlew assembleRelease

    - name: Generate signing key
      run: |
        keytool -genkeypair -v -keystore release.keystore -alias wireguard -keyalg RSA -keysize 2048 -validity 10000 -storepass password -keypass password -dname "CN=WireGuard, OU=Android, O=WireGuard, L=City, S=State, C=US"

    - name: Install Build Tools
      run: sudo apt-get install -y zipalign apksigner

    - name: Align APK
      run: |
        zipalign -v 4 ui/build/outputs/apk/release/ui-release-unsigned.apk ui/build/outputs/apk/release/ui-release-aligned.apk

    - name: Sign APK
      run: |
        jarsigner -verbose -keystore release.keystore -storepass password -keypass password ui/build/outputs/apk/release/ui-release-aligned.apk wireguard

    - name: Increment version
      id: increment_version
      run: |
        git fetch --tags
        latest_tag=$(git tag --sort=-v:refname | head -n1)
        echo "Latest tag: $latest_tag"
        IFS='.' read -r major minor patch <<< "${latest_tag#v}"
        new_patch=$((patch + 1))
        new_version="v$major.$minor.$new_patch"
        echo "New version: $new_version"
        echo "new_version=$new_version" >> $GITHUB_ENV

    - name: Push new tag
      run: |
        git config user.name "${{ github.actor }}"
        git config user.email "${{ github.actor }}@users.noreply.github.com"
        git tag ${{ env.new_version }}
        git push origin ${{ env.new_version }}


    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.new_version }}
        release_name: "Release ${{ env.new_version }}"
        draft: false
        prerelease: false

    - name: Upload Signed APK to GitHub Releases
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ui/build/outputs/apk/release/ui-release-aligned.apk
        asset_name: ui-release-signed.apk
        asset_content_type: application/vnd.android.package-archive
