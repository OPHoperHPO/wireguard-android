name: Android CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: true  # Clones submodules as well
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Cache Gradle build cache
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: gradle-build-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          gradle-build-${{ runner.os }}-
    
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    
    - name: Cache Android build output
      uses: actions/cache@v3
      with:
        path: |
          app/build
        key: android-build-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          android-build-${{ runner.os }}-

    - name: Build WireGuard Android
      run: ./gradlew assembleRelease

    - name: List build output directories
      run: |
        ls -la && ls -la app/build/ && ls -la app/build/outputs/ && ls -la app/build/outputs/apk && ls -la app/build/outputs/apk/release

    - name: Generate signing key
      run: |
        keytool -genkeypair -v -keystore release.keystore -alias wireguard -keyalg RSA -keysize 2048 -validity 10000 -storepass password -keypass password -dname "CN=WireGuard, OU=Android, O=WireGuard, L=City, S=State, C=US"
    
    - name: Sign APK
      run: |
        jarsigner -verbose -keystore release.keystore -storepass password -keypass password app/build/outputs/apk/release/app-release-unsigned.apk wireguard
    
    - name: Align and Verify APK
      run: |
        ./gradlew zipalign
        ./gradlew verifyApk
    
    - name: Upload Signed APK to GitHub Releases
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: app/build/outputs/apk/release/app-release-unsigned.apk
        asset_name: wireguard-release-signed.apk
        asset_content_type: application/vnd.android.package-archive
